// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: models/users.proto

package models

import (
	database_sql "database/sql"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Model        `protobuf:"bytes,1,opt,name=model,proto3,embedded=model" json:",omitempty"`
	Username     string                `protobuf:"bytes,2,opt,name=username,proto3" json:"username" gorm:"type:varchar(20);uniqueIndex:idx_user_username,sort:desc"`
	Salt         database_sql.RawBytes `protobuf:"bytes,3,opt,name=salt,proto3,customtype=database/sql.RawBytes" json:"-" gorm:"type:tinyblob"`
	Password     database_sql.RawBytes `protobuf:"bytes,4,opt,name=password,proto3,customtype=database/sql.RawBytes" json:"password,omitempty" gorm:"type:tinyblob"`
	Email        string                `protobuf:"bytes,5,opt,name=email,proto3" json:"email" gorm:"type:varchar(50)" valid:"email,optional"`
	PhoneNumber  string                `protobuf:"bytes,6,opt,name=phone_number,json=phoneNumber,proto3" json:"phoneNumber" gorm:"type:varchar(50)" valid:"numeric,optional"`
	FullName     string                `protobuf:"bytes,7,opt,name=full_name,json=fullName,proto3" json:"fullName" gorm:"type:varchar(50)"`
	Avatar       string                `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar" gorm:"type:varchar(128)"`
	Status       UserMeta_UserStatus   `protobuf:"varint,9,opt,name=status,proto3,enum=fuck_web.service.models.UserMeta_UserStatus" json:"status" gorm:"not null;default:0"`
	LoginTime    *time.Time            `protobuf:"bytes,10,opt,name=login_time,json=loginTime,proto3,customtype=time.Time" json:"loginTime" gorm:"-"`
	RoleId       string                `protobuf:"bytes,11,opt,name=role_id,json=roleId,proto3" json:"roleId,omitempty" gorm:"->;-:migration"`
	Role         string                `protobuf:"bytes,12,opt,name=role,proto3" json:"role,omitempty" gorm:"->;-:migration"`
	ExtendedData *UserExt              `protobuf:"bytes,15,opt,name=extended_data,json=extendedData,proto3,customtype=UserExt" json:"extendedData,omitempty" gorm:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_664862b77af102cf, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *User) GetStatus() UserMeta_UserStatus {
	if m != nil {
		return m.Status
	}
	return UserMeta_normal
}

func (m *User) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "fuck_web.service.models.User")
}

func init() { proto.RegisterFile("models/users.proto", fileDescriptor_664862b77af102cf) }

var fileDescriptor_664862b77af102cf = []byte{
	// 698 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x4f, 0x6f, 0xfb, 0x34,
	0x18, 0xc7, 0x5b, 0xe8, 0xba, 0xd6, 0x2b, 0x3f, 0x90, 0x61, 0x5b, 0xe0, 0x80, 0xab, 0x1c, 0xa0,
	0x13, 0x6d, 0xda, 0x15, 0x21, 0x41, 0x2a, 0x6d, 0x52, 0xd9, 0x90, 0x26, 0xd8, 0x26, 0xc2, 0x9f,
	0x03, 0x97, 0xc8, 0x49, 0xdc, 0xce, 0x5a, 0x12, 0x67, 0xb1, 0xd3, 0x3f, 0xef, 0x82, 0x23, 0x57,
	0xf6, 0x6a, 0x38, 0xee, 0xbc, 0x83, 0xc5, 0x39, 0xc7, 0xbe, 0x02, 0x64, 0x27, 0xeb, 0x3a, 0x69,
	0xd5, 0x38, 0x39, 0x7e, 0xfa, 0xfd, 0x7e, 0xbe, 0xae, 0x9f, 0x47, 0x06, 0x30, 0x62, 0x01, 0x09,
	0x79, 0x3f, 0xe3, 0x24, 0xe5, 0x56, 0x92, 0x32, 0xc1, 0xe0, 0xe1, 0x24, 0xf3, 0x6f, 0xdd, 0x39,
	0xf1, 0x2c, 0x4e, 0xd2, 0x19, 0xf5, 0x89, 0x55, 0x88, 0x3e, 0xfb, 0xb8, 0x14, 0x17, 0x4b, 0xa1,
	0x36, 0xff, 0x6d, 0x80, 0xda, 0x6f, 0x9c, 0xa4, 0xf0, 0x27, 0xb0, 0xa3, 0x7f, 0x30, 0xaa, 0xed,
	0x6a, 0x67, 0x6f, 0xf8, 0xb9, 0xb5, 0x05, 0x63, 0x5d, 0xaa, 0x65, 0x7c, 0xf0, 0x8f, 0x44, 0x95,
	0x07, 0x89, 0xaa, 0xb9, 0x44, 0xa0, 0xcb, 0x22, 0x2a, 0x48, 0x94, 0x88, 0xa5, 0x53, 0x40, 0xe0,
	0x2d, 0x68, 0xa8, 0x33, 0xc5, 0x38, 0x22, 0xc6, 0x7b, 0xed, 0x6a, 0xa7, 0x39, 0xbe, 0xce, 0x25,
	0x5a, 0xd7, 0x56, 0x12, 0x9d, 0x4e, 0x59, 0x1a, 0xd9, 0xa6, 0x58, 0x26, 0xc4, 0x9e, 0xe1, 0xd4,
	0xbf, 0xc1, 0x69, 0x67, 0x38, 0x38, 0x1a, 0x65, 0x31, 0xbd, 0xcb, 0xc8, 0x45, 0x1c, 0x90, 0x85,
	0x4d, 0x83, 0x85, 0xab, 0x2c, 0xee, 0x93, 0xaf, 0xcb, 0x59, 0x2a, 0xec, 0x80, 0x70, 0xdf, 0x74,
	0xd6, 0x30, 0x78, 0x05, 0x6a, 0x1c, 0x87, 0xc2, 0x78, 0x5f, 0x07, 0xd9, 0xea, 0x64, 0x8f, 0x12,
	0xed, 0x07, 0x58, 0x60, 0x0f, 0x73, 0xd2, 0xe7, 0x77, 0xa1, 0xe5, 0xe0, 0xf9, 0x78, 0x29, 0x08,
	0xcf, 0x25, 0xaa, 0xf6, 0x56, 0x12, 0x7d, 0xb2, 0x11, 0x2f, 0x68, 0xbc, 0xf4, 0x42, 0xe6, 0x99,
	0x8e, 0xe6, 0xc0, 0x29, 0x68, 0x24, 0x98, 0xf3, 0x39, 0x4b, 0x03, 0xa3, 0xa6, 0x99, 0x3f, 0xbe,
	0xc5, 0x84, 0x4f, 0x86, 0xe7, 0xab, 0xd8, 0x1a, 0xb2, 0x86, 0xc3, 0x9f, 0xc1, 0x0e, 0x89, 0x30,
	0x0d, 0x8d, 0x1d, 0x9d, 0x32, 0xca, 0x25, 0x2a, 0x0a, 0x2b, 0x89, 0xac, 0x57, 0xee, 0xe7, 0x9b,
	0xc1, 0x91, 0xd9, 0x9e, 0xe1, 0x90, 0x06, 0xb6, 0xa9, 0x75, 0x5d, 0x96, 0x08, 0xca, 0x62, 0x1c,
	0x9a, 0x4e, 0x61, 0x84, 0x13, 0xd0, 0x4a, 0x6e, 0x58, 0x4c, 0xdc, 0x38, 0x8b, 0x3c, 0x92, 0x1a,
	0x75, 0x4d, 0xfe, 0x3e, 0x97, 0x68, 0x4f, 0xd7, 0xaf, 0x74, 0x79, 0x25, 0xd1, 0xe0, 0x0d, 0x7e,
	0x9c, 0x45, 0x24, 0xa5, 0xfe, 0x46, 0xc2, 0x26, 0x00, 0x9e, 0x81, 0xe6, 0x24, 0x0b, 0x43, 0x57,
	0x77, 0x78, 0x57, 0x87, 0x7c, 0xa9, 0x3a, 0xac, 0x8a, 0x57, 0x45, 0x87, 0x0f, 0xb7, 0x24, 0x38,
	0x6b, 0x11, 0x3c, 0x01, 0x75, 0x3c, 0xc3, 0x02, 0xa7, 0x46, 0x43, 0x23, 0xbe, 0xc8, 0x25, 0x2a,
	0x2b, 0x2b, 0x89, 0x8c, 0x57, 0x00, 0xc7, 0xc3, 0x6f, 0x8f, 0x4c, 0xa7, 0xd4, 0xc0, 0x08, 0xd4,
	0xb9, 0xc0, 0x22, 0xe3, 0x46, 0xb3, 0x5d, 0xed, 0xbc, 0x1b, 0x76, 0xb7, 0x4e, 0xad, 0x9a, 0xf1,
	0x4b, 0x22, 0xb0, 0xfe, 0xf8, 0x45, 0x7b, 0xf4, 0x81, 0x4b, 0xff, 0x4a, 0xa2, 0x4f, 0x8b, 0xb4,
	0x98, 0x89, 0x76, 0x9c, 0x85, 0xe1, 0x28, 0x20, 0x13, 0x9c, 0x85, 0xc2, 0x1e, 0x98, 0x4e, 0x29,
	0x82, 0xe7, 0x00, 0x84, 0x6c, 0x4a, 0x63, 0x57, 0xd0, 0x88, 0x18, 0xa0, 0x38, 0xf2, 0xa3, 0x44,
	0x4d, 0xb5, 0xb7, 0x7e, 0xa5, 0x11, 0xc9, 0x25, 0x6a, 0x6a, 0x89, 0xda, 0xac, 0x24, 0x6a, 0x14,
	0xd0, 0x9e, 0xe9, 0x3c, 0x97, 0xe1, 0x0f, 0x60, 0x37, 0x65, 0x21, 0x71, 0x69, 0x60, 0xec, 0x69,
	0x46, 0x2f, 0x97, 0xe8, 0x23, 0x55, 0xba, 0x78, 0x39, 0x3f, 0xfb, 0xa5, 0xfb, 0x64, 0xd4, 0xb3,
	0x23, 0x3a, 0x4d, 0xb1, 0x6a, 0x85, 0xe9, 0xd4, 0x0b, 0x29, 0x3c, 0x05, 0x35, 0xf5, 0x65, 0xb4,
	0x34, 0xe4, 0xab, 0x5c, 0xa2, 0x77, 0x6a, 0xff, 0x7f, 0x10, 0xda, 0x08, 0x7f, 0x07, 0x1f, 0x90,
	0x85, 0x20, 0x71, 0x40, 0x02, 0x57, 0x4d, 0xb6, 0xf1, 0xa1, 0x26, 0x1d, 0x3f, 0x4a, 0xb4, 0xab,
	0xee, 0xe9, 0x7c, 0x21, 0x72, 0x89, 0x0e, 0x9e, 0x34, 0x67, 0x58, 0xe0, 0x17, 0xf0, 0xe7, 0x7f,
	0xd7, 0xda, 0xd4, 0xd8, 0xad, 0x87, 0xbf, 0x51, 0xe5, 0xcf, 0x7b, 0x54, 0xf9, 0xeb, 0x1e, 0x55,
	0xc6, 0xa3, 0x3f, 0xbe, 0x9b, 0x52, 0x71, 0x93, 0x79, 0x96, 0xcf, 0xa2, 0xfe, 0x25, 0xf5, 0x53,
	0x76, 0x9d, 0xf0, 0x9e, 0x1f, 0xf7, 0x55, 0xb3, 0x7a, 0x73, 0xe2, 0xf5, 0x93, 0xdb, 0x69, 0xbf,
	0x6c, 0x58, 0xf9, 0x3c, 0x8d, 0x8a, 0xc5, 0xab, 0xeb, 0x67, 0xea, 0xeb, 0xff, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xd6, 0x35, 0x02, 0x2f, 0xea, 0x04, 0x00, 0x00,
}
