// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: config.proto

package config

import (
	fmt "fmt"
	_ "github.com/MicroOps-cn/fuck-web/pkg/client/email"
	github_com_MicroOps_cn_fuck_web_pkg_client_email "github.com/MicroOps-cn/fuck-web/pkg/client/email"
	_ "github.com/MicroOps-cn/fuck-web/pkg/client/geoip"
	github_com_MicroOps_cn_fuck_web_pkg_client_geoip "github.com/MicroOps-cn/fuck-web/pkg/client/geoip"
	_ "github.com/MicroOps-cn/fuck-web/pkg/client/ldap"
	github_com_MicroOps_cn_fuck_web_pkg_client_ldap "github.com/MicroOps-cn/fuck-web/pkg/client/ldap"
	oauth2 "github.com/MicroOps-cn/fuck-web/pkg/client/oauth2"
	xxljob "github.com/MicroOps-cn/fuck-web/pkg/client/xxljob"
	github_com_MicroOps_cn_fuck_capacity "github.com/MicroOps-cn/fuck/capacity"
	github_com_MicroOps_cn_fuck_clients_gorm "github.com/MicroOps-cn/fuck/clients/gorm"
	github_com_MicroOps_cn_fuck_clients_redis "github.com/MicroOps-cn/fuck/clients/redis"
	github_com_MicroOps_cn_fuck_clients_tracing "github.com/MicroOps-cn/fuck/clients/tracing"
	github_com_MicroOps_cn_fuck_jwt "github.com/MicroOps-cn/fuck/jwt"
	github_com_MicroOps_cn_fuck_sets "github.com/MicroOps-cn/fuck/sets"
	github_com_MicroOps_cn_fuck_wrapper "github.com/MicroOps-cn/fuck/wrapper"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type LoginType int32

const (
	LoginType_normal LoginType = 0
	LoginType_email  LoginType = 4
	LoginType_sms    LoginType = 5
	LoginType_oauth2 LoginType = 6
)

var LoginType_name = map[int32]string{
	0: "normal",
	4: "email",
	5: "sms",
	6: "oauth2",
}

var LoginType_value = map[string]int32{
	"normal": 0,
	"email":  4,
	"sms":    5,
	"oauth2": 6,
}

func (x LoginType) String() string {
	return proto.EnumName(LoginType_name, int32(x))
}

func (LoginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

// @sync-to-public:public/src/services/fuck-web/enums.ts:PasswordComplexity
type PasswordComplexity int32

const (
	PasswordComplexity_unsafe    PasswordComplexity = 0
	PasswordComplexity_general   PasswordComplexity = 1
	PasswordComplexity_safe      PasswordComplexity = 2
	PasswordComplexity_very_safe PasswordComplexity = 3
)

var PasswordComplexity_name = map[int32]string{
	0: "unsafe",
	1: "general",
	2: "safe",
	3: "very_safe",
}

var PasswordComplexity_value = map[string]int32{
	"unsafe":    0,
	"general":   1,
	"safe":      2,
	"very_safe": 3,
}

func (x PasswordComplexity) String() string {
	return proto.EnumName(PasswordComplexity_name, int32(x))
}

func (PasswordComplexity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}

type CustomType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomType) Reset()         { *m = CustomType{} }
func (m *CustomType) String() string { return proto.CompactTextString(m) }
func (*CustomType) ProtoMessage()    {}
func (*CustomType) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}
func (m *CustomType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomType.Unmarshal(m, b)
}
func (m *CustomType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomType.Marshal(b, m, deterministic)
}
func (m *CustomType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomType.Merge(m, src)
}
func (m *CustomType) XXX_Size() int {
	return xxx_messageInfo_CustomType.Size(m)
}
func (m *CustomType) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomType.DiscardUnknown(m)
}

var xxx_messageInfo_CustomType proto.InternalMessageInfo

type StorageRef struct {
	Storage              *Storage `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageRef) Reset()         { *m = StorageRef{} }
func (m *StorageRef) String() string { return proto.CompactTextString(m) }
func (*StorageRef) ProtoMessage()    {}
func (*StorageRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}
func (m *StorageRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageRef.Unmarshal(m, b)
}
func (m *StorageRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageRef.Marshal(b, m, deterministic)
}
func (m *StorageRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageRef.Merge(m, src)
}
func (m *StorageRef) XXX_Size() int {
	return xxx_messageInfo_StorageRef.Size(m)
}
func (m *StorageRef) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageRef.DiscardUnknown(m)
}

var xxx_messageInfo_StorageRef proto.InternalMessageInfo

func (m *StorageRef) GetStorage() *Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *StorageRef) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *StorageRef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Storage struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Source:
	//	*Storage_Ref
	//	*Storage_Mysql
	//	*Storage_Redis
	//	*Storage_Ldap
	//	*Storage_Sqlite
	Source               isStorage_Source `protobuf_oneof:"source"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Storage) Reset()         { *m = Storage{} }
func (m *Storage) String() string { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()    {}
func (*Storage) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}
func (m *Storage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storage.Unmarshal(m, b)
}
func (m *Storage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storage.Marshal(b, m, deterministic)
}
func (m *Storage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storage.Merge(m, src)
}
func (m *Storage) XXX_Size() int {
	return xxx_messageInfo_Storage.Size(m)
}
func (m *Storage) XXX_DiscardUnknown() {
	xxx_messageInfo_Storage.DiscardUnknown(m)
}

var xxx_messageInfo_Storage proto.InternalMessageInfo

type isStorage_Source interface {
	isStorage_Source()
}

type Storage_Ref struct {
	Ref *StorageRef `protobuf:"bytes,10,opt,name=ref,proto3,oneof" json:"ref,omitempty"`
}
type Storage_Mysql struct {
	Mysql *github_com_MicroOps_cn_fuck_clients_gorm.MySQLClient `protobuf:"bytes,11,opt,name=mysql,proto3,oneof,customtype=github.com/MicroOps-cn/fuck/clients/gorm.MySQLClient" json:"mysql,omitempty"`
}
type Storage_Redis struct {
	Redis *github_com_MicroOps_cn_fuck_clients_redis.Client `protobuf:"bytes,12,opt,name=redis,proto3,oneof,customtype=github.com/MicroOps-cn/fuck/clients/redis.Client" json:"redis,omitempty"`
}
type Storage_Ldap struct {
	Ldap *github_com_MicroOps_cn_fuck_web_pkg_client_ldap.Client `protobuf:"bytes,13,opt,name=ldap,proto3,oneof,customtype=github.com/MicroOps-cn/fuck-web/pkg/client/ldap.Client" json:"ldap,omitempty"`
}
type Storage_Sqlite struct {
	Sqlite *github_com_MicroOps_cn_fuck_clients_gorm.SQLiteClient `protobuf:"bytes,14,opt,name=sqlite,proto3,oneof,customtype=github.com/MicroOps-cn/fuck/clients/gorm.SQLiteClient" json:"sqlite,omitempty"`
}

func (*Storage_Ref) isStorage_Source()    {}
func (*Storage_Mysql) isStorage_Source()  {}
func (*Storage_Redis) isStorage_Source()  {}
func (*Storage_Ldap) isStorage_Source()   {}
func (*Storage_Sqlite) isStorage_Source() {}

func (m *Storage) GetSource() isStorage_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Storage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Storage) GetRef() *StorageRef {
	if x, ok := m.GetSource().(*Storage_Ref); ok {
		return x.Ref
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Storage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Storage_Ref)(nil),
		(*Storage_Mysql)(nil),
		(*Storage_Redis)(nil),
		(*Storage_Ldap)(nil),
		(*Storage_Sqlite)(nil),
	}
}

type Storages struct {
	Default              *Storage                                                 `protobuf:"bytes,1,opt,name=default,proto3" json:"default,omitempty"`
	Session              *Storage                                                 `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	User                 *Storage                                                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Logging              *Storage                                                 `protobuf:"bytes,4,opt,name=logging,proto3" json:"logging,omitempty"`
	Geoip                *github_com_MicroOps_cn_fuck_web_pkg_client_geoip.Client `protobuf:"bytes,15,opt,name=geoip,proto3,customtype=github.com/MicroOps-cn/fuck-web/pkg/client/geoip.Client" json:"geoip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *Storages) Reset()         { *m = Storages{} }
func (m *Storages) String() string { return proto.CompactTextString(m) }
func (*Storages) ProtoMessage()    {}
func (*Storages) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{3}
}
func (m *Storages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storages.Unmarshal(m, b)
}
func (m *Storages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storages.Marshal(b, m, deterministic)
}
func (m *Storages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storages.Merge(m, src)
}
func (m *Storages) XXX_Size() int {
	return xxx_messageInfo_Storages.Size(m)
}
func (m *Storages) XXX_DiscardUnknown() {
	xxx_messageInfo_Storages.DiscardUnknown(m)
}

var xxx_messageInfo_Storages proto.InternalMessageInfo

func (m *Storages) GetDefault() *Storage {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *Storages) GetSession() *Storage {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *Storages) GetUser() *Storage {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Storages) GetLogging() *Storage {
	if m != nil {
		return m.Logging
	}
	return nil
}

type GlobalOptions struct {
	MaxUploadSize        github_com_MicroOps_cn_fuck_capacity.Capacities `protobuf:"bytes,1,opt,name=max_upload_size,json=maxUploadSize,proto3,customtype=github.com/MicroOps-cn/fuck/capacity.Capacities" json:"max_upload_size"`
	MaxBodySize          github_com_MicroOps_cn_fuck_capacity.Capacities `protobuf:"bytes,2,opt,name=max_body_size,json=maxBodySize,proto3,customtype=github.com/MicroOps-cn/fuck/capacity.Capacities" json:"max_body_size"`
	UploadPath           string                                          `protobuf:"bytes,3,opt,name=upload_path,json=uploadPath,proto3" json:"upload_path,omitempty"`
	Workspace            string                                          `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`
	AppName              string                                          `protobuf:"bytes,7,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Title                string                                          `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle             string                                          `protobuf:"bytes,11,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	Logo                 string                                          `protobuf:"bytes,12,opt,name=logo,proto3" json:"logo,omitempty"`
	Copyright            string                                          `protobuf:"bytes,13,opt,name=copyright,proto3" json:"copyright,omitempty"`
	AdminEmail           string                                          `protobuf:"bytes,14,opt,name=admin_email,json=adminEmail,proto3" json:"admin_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *GlobalOptions) Reset()         { *m = GlobalOptions{} }
func (m *GlobalOptions) String() string { return proto.CompactTextString(m) }
func (*GlobalOptions) ProtoMessage()    {}
func (*GlobalOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{4}
}
func (m *GlobalOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalOptions.Unmarshal(m, b)
}
func (m *GlobalOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalOptions.Marshal(b, m, deterministic)
}
func (m *GlobalOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalOptions.Merge(m, src)
}
func (m *GlobalOptions) XXX_Size() int {
	return xxx_messageInfo_GlobalOptions.Size(m)
}
func (m *GlobalOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalOptions proto.InternalMessageInfo

func (m *GlobalOptions) GetUploadPath() string {
	if m != nil {
		return m.UploadPath
	}
	return ""
}

func (m *GlobalOptions) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *GlobalOptions) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *GlobalOptions) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GlobalOptions) GetSubTitle() string {
	if m != nil {
		return m.SubTitle
	}
	return ""
}

func (m *GlobalOptions) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

func (m *GlobalOptions) GetCopyright() string {
	if m != nil {
		return m.Copyright
	}
	return ""
}

func (m *GlobalOptions) GetAdminEmail() string {
	if m != nil {
		return m.AdminEmail
	}
	return ""
}

type RateLimit struct {
	Name                 github_com_MicroOps_cn_fuck_wrapper.OneOrMore[string] `protobuf:"bytes,1,opt,name=name,proto3,customtype=github.com/MicroOps-cn/fuck/wrapper.OneOrMore[string]" json:"name"`
	Allower              Limiter                                               `protobuf:"bytes,2,opt,name=allower,proto3,customtype=Limiter" json:"-"`
	Limit                string                                                `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Burst                int32                                                 `protobuf:"varint,4,opt,name=burst,proto3" json:"burst,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *RateLimit) Reset()         { *m = RateLimit{} }
func (m *RateLimit) String() string { return proto.CompactTextString(m) }
func (*RateLimit) ProtoMessage()    {}
func (*RateLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}
func (m *RateLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateLimit.Unmarshal(m, b)
}
func (m *RateLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateLimit.Marshal(b, m, deterministic)
}
func (m *RateLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateLimit.Merge(m, src)
}
func (m *RateLimit) XXX_Size() int {
	return xxx_messageInfo_RateLimit.Size(m)
}
func (m *RateLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_RateLimit.DiscardUnknown(m)
}

var xxx_messageInfo_RateLimit proto.InternalMessageInfo

func (m *RateLimit) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *RateLimit) GetBurst() int32 {
	if m != nil {
		return m.Burst
	}
	return 0
}

type SecurityOptions struct {
	TrustIp              []github_com_MicroOps_cn_fuck_sets.IPNet   `protobuf:"bytes,1,rep,name=trust_ip,json=trustIp,proto3,customtype=github.com/MicroOps-cn/fuck/sets.IPNet" json:"trust_ip,omitempty"`
	DefaultLoginType     LoginType                                  `protobuf:"varint,2,opt,name=default_login_type,json=defaultLoginType,proto3,enum=fuck_web.config.LoginType" json:"default_login_type,omitempty"`
	AllowLoginType       []LoginType                                `protobuf:"varint,3,rep,packed,name=allow_login_type,json=allowLoginType,proto3,enum=fuck_web.config.LoginType" json:"allow_login_type,omitempty"`
	Oauth2               []*oauth2.Options                          `protobuf:"bytes,8,rep,name=oauth2,proto3" json:"oauth2,omitempty"`
	DisableLoginForm     bool                                       `protobuf:"varint,9,opt,name=disable_login_form,json=disableLoginForm,proto3" json:"disable_login_form,omitempty"`
	Secret               string                                     `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	Jwt                  *github_com_MicroOps_cn_fuck_jwt.JWTConfig `protobuf:"bytes,6,opt,name=jwt,proto3,customtype=github.com/MicroOps-cn/fuck/jwt.JWTConfig" json:"jwt,omitempty"`
	RateLimit            []*RateLimit                               `protobuf:"bytes,7,rep,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *SecurityOptions) Reset()         { *m = SecurityOptions{} }
func (m *SecurityOptions) String() string { return proto.CompactTextString(m) }
func (*SecurityOptions) ProtoMessage()    {}
func (*SecurityOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{6}
}
func (m *SecurityOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityOptions.Unmarshal(m, b)
}
func (m *SecurityOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityOptions.Marshal(b, m, deterministic)
}
func (m *SecurityOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityOptions.Merge(m, src)
}
func (m *SecurityOptions) XXX_Size() int {
	return xxx_messageInfo_SecurityOptions.Size(m)
}
func (m *SecurityOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityOptions proto.InternalMessageInfo

func (m *SecurityOptions) GetDefaultLoginType() LoginType {
	if m != nil {
		return m.DefaultLoginType
	}
	return LoginType_normal
}

func (m *SecurityOptions) GetAllowLoginType() []LoginType {
	if m != nil {
		return m.AllowLoginType
	}
	return nil
}

func (m *SecurityOptions) GetOauth2() []*oauth2.Options {
	if m != nil {
		return m.Oauth2
	}
	return nil
}

func (m *SecurityOptions) GetDisableLoginForm() bool {
	if m != nil {
		return m.DisableLoginForm
	}
	return false
}

func (m *SecurityOptions) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *SecurityOptions) GetRateLimit() []*RateLimit {
	if m != nil {
		return m.RateLimit
	}
	return nil
}

type JobCron struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" mapstructure:"name"`
	Expr                 string         `protobuf:"bytes,2,opt,name=expr,proto3" json:"expr,omitempty" mapstructure:"expr"`
	Params               string         `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty" mapstructure:"params"`
	Timeout              *time.Duration `protobuf:"bytes,4,opt,name=timeout,proto3,customtype=time.Duration" json:"timeout,omitempty" mapstructure:"timeout"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *JobCron) Reset()         { *m = JobCron{} }
func (m *JobCron) String() string { return proto.CompactTextString(m) }
func (*JobCron) ProtoMessage()    {}
func (*JobCron) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{7}
}
func (m *JobCron) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobCron.Unmarshal(m, b)
}
func (m *JobCron) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobCron.Marshal(b, m, deterministic)
}
func (m *JobCron) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobCron.Merge(m, src)
}
func (m *JobCron) XXX_Size() int {
	return xxx_messageInfo_JobCron.Size(m)
}
func (m *JobCron) XXX_DiscardUnknown() {
	xxx_messageInfo_JobCron.DiscardUnknown(m)
}

var xxx_messageInfo_JobCron proto.InternalMessageInfo

func (m *JobCron) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobCron) GetExpr() string {
	if m != nil {
		return m.Expr
	}
	return ""
}

func (m *JobCron) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

type JobOptions struct {
	Scheduler            *JobOptions_Scheduler `protobuf:"bytes,1,opt,name=scheduler,proto3" json:"scheduler,omitempty"`
	Cron                 []*JobCron            `protobuf:"bytes,2,rep,name=cron,proto3" json:"cron,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *JobOptions) Reset()         { *m = JobOptions{} }
func (m *JobOptions) String() string { return proto.CompactTextString(m) }
func (*JobOptions) ProtoMessage()    {}
func (*JobOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{8}
}
func (m *JobOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOptions.Unmarshal(m, b)
}
func (m *JobOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOptions.Marshal(b, m, deterministic)
}
func (m *JobOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOptions.Merge(m, src)
}
func (m *JobOptions) XXX_Size() int {
	return xxx_messageInfo_JobOptions.Size(m)
}
func (m *JobOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOptions.DiscardUnknown(m)
}

var xxx_messageInfo_JobOptions proto.InternalMessageInfo

func (m *JobOptions) GetScheduler() *JobOptions_Scheduler {
	if m != nil {
		return m.Scheduler
	}
	return nil
}

func (m *JobOptions) GetCron() []*JobCron {
	if m != nil {
		return m.Cron
	}
	return nil
}

type JobOptions_LocalScheduler struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobOptions_LocalScheduler) Reset()         { *m = JobOptions_LocalScheduler{} }
func (m *JobOptions_LocalScheduler) String() string { return proto.CompactTextString(m) }
func (*JobOptions_LocalScheduler) ProtoMessage()    {}
func (*JobOptions_LocalScheduler) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{8, 0}
}
func (m *JobOptions_LocalScheduler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOptions_LocalScheduler.Unmarshal(m, b)
}
func (m *JobOptions_LocalScheduler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOptions_LocalScheduler.Marshal(b, m, deterministic)
}
func (m *JobOptions_LocalScheduler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOptions_LocalScheduler.Merge(m, src)
}
func (m *JobOptions_LocalScheduler) XXX_Size() int {
	return xxx_messageInfo_JobOptions_LocalScheduler.Size(m)
}
func (m *JobOptions_LocalScheduler) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOptions_LocalScheduler.DiscardUnknown(m)
}

var xxx_messageInfo_JobOptions_LocalScheduler proto.InternalMessageInfo

type JobOptions_Scheduler struct {
	// Types that are valid to be assigned to SchedulerBackend:
	//	*JobOptions_Scheduler_Local
	//	*JobOptions_Scheduler_XXLJob
	SchedulerBackend     isJobOptions_Scheduler_SchedulerBackend `protobuf_oneof:"SchedulerBackend"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *JobOptions_Scheduler) Reset()         { *m = JobOptions_Scheduler{} }
func (m *JobOptions_Scheduler) String() string { return proto.CompactTextString(m) }
func (*JobOptions_Scheduler) ProtoMessage()    {}
func (*JobOptions_Scheduler) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{8, 1}
}
func (m *JobOptions_Scheduler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOptions_Scheduler.Unmarshal(m, b)
}
func (m *JobOptions_Scheduler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOptions_Scheduler.Marshal(b, m, deterministic)
}
func (m *JobOptions_Scheduler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOptions_Scheduler.Merge(m, src)
}
func (m *JobOptions_Scheduler) XXX_Size() int {
	return xxx_messageInfo_JobOptions_Scheduler.Size(m)
}
func (m *JobOptions_Scheduler) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOptions_Scheduler.DiscardUnknown(m)
}

var xxx_messageInfo_JobOptions_Scheduler proto.InternalMessageInfo

type isJobOptions_Scheduler_SchedulerBackend interface {
	isJobOptions_Scheduler_SchedulerBackend()
}

type JobOptions_Scheduler_Local struct {
	Local *JobOptions_LocalScheduler `protobuf:"bytes,1,opt,name=local,proto3,oneof" json:"local,omitempty"`
}
type JobOptions_Scheduler_XXLJob struct {
	XXLJob *xxljob.Options `protobuf:"bytes,2,opt,name=xxljob,proto3,oneof" json:"xxljob,omitempty"`
}

func (*JobOptions_Scheduler_Local) isJobOptions_Scheduler_SchedulerBackend()  {}
func (*JobOptions_Scheduler_XXLJob) isJobOptions_Scheduler_SchedulerBackend() {}

func (m *JobOptions_Scheduler) GetSchedulerBackend() isJobOptions_Scheduler_SchedulerBackend {
	if m != nil {
		return m.SchedulerBackend
	}
	return nil
}

func (m *JobOptions_Scheduler) GetLocal() *JobOptions_LocalScheduler {
	if x, ok := m.GetSchedulerBackend().(*JobOptions_Scheduler_Local); ok {
		return x.Local
	}
	return nil
}

func (m *JobOptions_Scheduler) GetXXLJob() *xxljob.Options {
	if x, ok := m.GetSchedulerBackend().(*JobOptions_Scheduler_XXLJob); ok {
		return x.XXLJob
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*JobOptions_Scheduler) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*JobOptions_Scheduler_Local)(nil),
		(*JobOptions_Scheduler_XXLJob)(nil),
	}
}

type Config struct {
	Storage              *Storages                                                     `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Global               *GlobalOptions                                                `protobuf:"bytes,2,opt,name=global,proto3" json:"global,omitempty"`
	Smtp                 *github_com_MicroOps_cn_fuck_web_pkg_client_email.SmtpOptions `protobuf:"bytes,3,opt,name=smtp,proto3,customtype=github.com/MicroOps-cn/fuck-web/pkg/client/email.SmtpOptions" json:"smtp,omitempty"`
	Security             *SecurityOptions                                              `protobuf:"bytes,4,opt,name=security,proto3" json:"security,omitempty"`
	Trace                *github_com_MicroOps_cn_fuck_clients_tracing.TraceOptions     `protobuf:"bytes,5,opt,name=trace,proto3,customtype=github.com/MicroOps-cn/fuck/clients/tracing.TraceOptions" json:"trace,omitempty"`
	Job                  *JobOptions                                                   `protobuf:"bytes,6,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{9}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetStorage() *Storages {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *Config) GetGlobal() *GlobalOptions {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *Config) GetSecurity() *SecurityOptions {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Config) GetJob() *JobOptions {
	if m != nil {
		return m.Job
	}
	return nil
}

type RuntimeSecurityConfig struct {
	ForceEnableMfa              bool               `protobuf:"varint,1,opt,name=force_enable_mfa,json=forceEnableMfa,proto3" json:"forceEnableMfa"`
	PasswordComplexity          PasswordComplexity `protobuf:"varint,2,opt,name=password_complexity,json=passwordComplexity,proto3,enum=fuck_web.config.PasswordComplexity" json:"passwordComplexity"`
	PasswordMinLength           uint32             `protobuf:"varint,3,opt,name=password_min_length,json=passwordMinLength,proto3" json:"passwordMinLength"`
	PasswordExpireTime          uint32             `protobuf:"varint,4,opt,name=password_expire_time,json=passwordExpireTime,proto3" json:"passwordExpireTime"`
	PasswordFailedLockThreshold uint32             `protobuf:"varint,5,opt,name=password_failed_lock_threshold,json=passwordFailedLockThreshold,proto3" json:"passwordFailedLockThreshold"`
	PasswordFailedLockDuration  uint32             `protobuf:"varint,6,opt,name=password_failed_lock_duration,json=passwordFailedLockDuration,proto3" json:"passwordFailedLockDuration"`
	PasswordHistory             uint32             `protobuf:"varint,7,opt,name=password_history,json=passwordHistory,proto3" json:"passwordHistory"`
	AccountInactiveLock         uint32             `protobuf:"varint,8,opt,name=account_inactive_lock,json=accountInactiveLock,proto3" json:"accountInactiveLock"`
	LoginSessionInactivityTime  uint32             `protobuf:"varint,9,opt,name=login_session_inactivity_time,json=loginSessionInactivityTime,proto3" json:"loginSessionInactivityTime"`
	LoginSessionMaxTime         uint32             `protobuf:"varint,10,opt,name=login_session_max_time,json=loginSessionMaxTime,proto3" json:"loginSessionMaxTime"`
	XXX_NoUnkeyedLiteral        struct{}           `json:"-"`
	XXX_unrecognized            []byte             `json:"-"`
	XXX_sizecache               int32              `json:"-"`
}

func (m *RuntimeSecurityConfig) Reset()         { *m = RuntimeSecurityConfig{} }
func (m *RuntimeSecurityConfig) String() string { return proto.CompactTextString(m) }
func (*RuntimeSecurityConfig) ProtoMessage()    {}
func (*RuntimeSecurityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{10}
}
func (m *RuntimeSecurityConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeSecurityConfig.Unmarshal(m, b)
}
func (m *RuntimeSecurityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeSecurityConfig.Marshal(b, m, deterministic)
}
func (m *RuntimeSecurityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeSecurityConfig.Merge(m, src)
}
func (m *RuntimeSecurityConfig) XXX_Size() int {
	return xxx_messageInfo_RuntimeSecurityConfig.Size(m)
}
func (m *RuntimeSecurityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeSecurityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeSecurityConfig proto.InternalMessageInfo

func (m *RuntimeSecurityConfig) GetForceEnableMfa() bool {
	if m != nil {
		return m.ForceEnableMfa
	}
	return false
}

func (m *RuntimeSecurityConfig) GetPasswordComplexity() PasswordComplexity {
	if m != nil {
		return m.PasswordComplexity
	}
	return PasswordComplexity_unsafe
}

func (m *RuntimeSecurityConfig) GetPasswordMinLength() uint32 {
	if m != nil {
		return m.PasswordMinLength
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetPasswordExpireTime() uint32 {
	if m != nil {
		return m.PasswordExpireTime
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetPasswordFailedLockThreshold() uint32 {
	if m != nil {
		return m.PasswordFailedLockThreshold
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetPasswordFailedLockDuration() uint32 {
	if m != nil {
		return m.PasswordFailedLockDuration
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetPasswordHistory() uint32 {
	if m != nil {
		return m.PasswordHistory
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetAccountInactiveLock() uint32 {
	if m != nil {
		return m.AccountInactiveLock
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetLoginSessionInactivityTime() uint32 {
	if m != nil {
		return m.LoginSessionInactivityTime
	}
	return 0
}

func (m *RuntimeSecurityConfig) GetLoginSessionMaxTime() uint32 {
	if m != nil {
		return m.LoginSessionMaxTime
	}
	return 0
}

type RuntimeConfig struct {
	Security             *RuntimeSecurityConfig `protobuf:"bytes,1,opt,name=security,proto3" json:"security,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RuntimeConfig) Reset()         { *m = RuntimeConfig{} }
func (m *RuntimeConfig) String() string { return proto.CompactTextString(m) }
func (*RuntimeConfig) ProtoMessage()    {}
func (*RuntimeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{11}
}
func (m *RuntimeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeConfig.Unmarshal(m, b)
}
func (m *RuntimeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeConfig.Marshal(b, m, deterministic)
}
func (m *RuntimeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeConfig.Merge(m, src)
}
func (m *RuntimeConfig) XXX_Size() int {
	return xxx_messageInfo_RuntimeConfig.Size(m)
}
func (m *RuntimeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeConfig proto.InternalMessageInfo

func (m *RuntimeConfig) GetSecurity() *RuntimeSecurityConfig {
	if m != nil {
		return m.Security
	}
	return nil
}

func init() {
	proto.RegisterEnum("fuck_web.config.LoginType", LoginType_name, LoginType_value)
	proto.RegisterEnum("fuck_web.config.PasswordComplexity", PasswordComplexity_name, PasswordComplexity_value)
	proto.RegisterType((*CustomType)(nil), "fuck_web.config.custom_type")
	proto.RegisterType((*StorageRef)(nil), "fuck_web.config.StorageRef")
	proto.RegisterType((*Storage)(nil), "fuck_web.config.Storage")
	proto.RegisterType((*Storages)(nil), "fuck_web.config.Storages")
	proto.RegisterType((*GlobalOptions)(nil), "fuck_web.config.GlobalOptions")
	proto.RegisterType((*RateLimit)(nil), "fuck_web.config.RateLimit")
	proto.RegisterType((*SecurityOptions)(nil), "fuck_web.config.SecurityOptions")
	proto.RegisterType((*JobCron)(nil), "fuck_web.config.JobCron")
	proto.RegisterType((*JobOptions)(nil), "fuck_web.config.JobOptions")
	proto.RegisterType((*JobOptions_LocalScheduler)(nil), "fuck_web.config.JobOptions.LocalScheduler")
	proto.RegisterType((*JobOptions_Scheduler)(nil), "fuck_web.config.JobOptions.Scheduler")
	proto.RegisterType((*Config)(nil), "fuck_web.config.Config")
	proto.RegisterType((*RuntimeSecurityConfig)(nil), "fuck_web.config.RuntimeSecurityConfig")
	proto.RegisterType((*RuntimeConfig)(nil), "fuck_web.config.RuntimeConfig")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 1797 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x72, 0x1b, 0xc7,
	0x11, 0x16, 0x84, 0xff, 0xa6, 0x21, 0xc1, 0xa3, 0x1f, 0x43, 0x94, 0xa3, 0x65, 0xe0, 0x8a, 0x8b,
	0x91, 0x4c, 0x20, 0xa1, 0x1d, 0xcb, 0x3f, 0x4a, 0x2a, 0xb5, 0x34, 0x65, 0x52, 0x01, 0x2d, 0x6a,
	0xc0, 0x54, 0x5c, 0x49, 0xb9, 0x50, 0x83, 0xc5, 0x00, 0x5c, 0x71, 0x77, 0x67, 0x35, 0x33, 0x2b,
	0x02, 0xae, 0xca, 0x21, 0xef, 0x91, 0x27, 0xc8, 0x29, 0xe7, 0x1c, 0x72, 0xce, 0x21, 0x4f, 0x80,
	0x54, 0xf6, 0x90, 0x5b, 0x78, 0xd4, 0x13, 0xa4, 0xe6, 0x67, 0x01, 0x42, 0xa0, 0x20, 0xfa, 0x90,
	0x13, 0x77, 0xba, 0xbf, 0xee, 0x6f, 0x66, 0xba, 0xa7, 0xbb, 0x09, 0x78, 0xc7, 0x63, 0xd1, 0xd0,
	0x1f, 0xb5, 0x62, 0xce, 0x24, 0x43, 0xd7, 0x87, 0x89, 0x77, 0xd2, 0x3b, 0xa5, 0xfd, 0x96, 0x11,
	0xaf, 0xd7, 0xe5, 0x24, 0xa6, 0xa2, 0x1d, 0x0c, 0x48, 0x6c, 0x20, 0xeb, 0xef, 0x1a, 0x09, 0x0d,
	0x89, 0x1f, 0x2c, 0x8a, 0x46, 0x94, 0xf9, 0x19, 0x0a, 0x19, 0x11, 0x23, 0x89, 0x3c, 0xde, 0x5e,
	0x94, 0x8d, 0xc7, 0xc1, 0x73, 0xd6, 0xb7, 0xb2, 0x9b, 0x23, 0x36, 0x62, 0xfa, 0xb3, 0xad, 0xbe,
	0x8c, 0xb4, 0x59, 0x83, 0x35, 0x2f, 0x11, 0x92, 0x85, 0x3d, 0x65, 0xd2, 0x3c, 0x06, 0xe8, 0x4a,
	0xc6, 0xc9, 0x88, 0x62, 0x3a, 0x44, 0xdb, 0x50, 0x16, 0x66, 0xd5, 0xc8, 0x6d, 0xe4, 0x36, 0xd7,
	0xb6, 0x1b, 0xad, 0xd7, 0x76, 0xdd, 0xca, 0xd0, 0x19, 0x10, 0x21, 0x28, 0xc4, 0x44, 0x1e, 0x37,
	0xae, 0x6e, 0xe4, 0x36, 0xab, 0x58, 0x7f, 0x2b, 0x59, 0x44, 0x42, 0xda, 0xc8, 0x1b, 0x99, 0xfa,
	0x6e, 0xfe, 0xb9, 0x00, 0xe5, 0xee, 0xdc, 0x46, 0xeb, 0x73, 0x73, 0x3d, 0x6a, 0x43, 0x9e, 0xd3,
	0x61, 0x03, 0x34, 0xef, 0xdd, 0x37, 0xf2, 0xd2, 0xe1, 0xde, 0x15, 0xac, 0x90, 0x28, 0x82, 0x62,
	0x38, 0x11, 0x2f, 0x82, 0xc6, 0x9a, 0x36, 0x79, 0x7f, 0xc9, 0xe4, 0xdc, 0x39, 0xdd, 0xcf, 0xa6,
	0xa9, 0xf3, 0xc9, 0xc8, 0x97, 0xc7, 0x89, 0x52, 0x87, 0xed, 0x03, 0xdf, 0xe3, 0xec, 0x69, 0x2c,
	0xb6, 0xbc, 0xa8, 0xad, 0xec, 0xda, 0x5e, 0xe0, 0xd3, 0x48, 0x8a, 0xf6, 0x88, 0xf1, 0xb0, 0x75,
	0x30, 0xe9, 0x3e, 0xeb, 0xec, 0x68, 0xc9, 0xde, 0x15, 0x6c, 0x68, 0xd0, 0x73, 0x28, 0x72, 0x3a,
	0xf0, 0x45, 0xe3, 0x9d, 0x4b, 0xf0, 0x7d, 0x32, 0x4d, 0x9d, 0x9f, 0x5d, 0x86, 0x4f, 0xbb, 0x6c,
	0xcd, 0xb9, 0xf4, 0x1a, 0x09, 0x28, 0xa8, 0xbc, 0x68, 0xd4, 0x34, 0xd5, 0x8f, 0xcf, 0x51, 0x69,
	0x60, 0x4b, 0x27, 0x4d, 0x67, 0x40, 0xe2, 0xa7, 0xb1, 0xf4, 0x59, 0x24, 0xdc, 0x2f, 0xa6, 0xa9,
	0xf3, 0xe9, 0x0a, 0xbe, 0xad, 0x53, 0xda, 0x6f, 0xc7, 0x27, 0x23, 0xcb, 0x6b, 0xb2, 0x6e, 0xc6,
	0xaa, 0xc9, 0xd0, 0x0b, 0x28, 0x89, 0x17, 0x81, 0x2f, 0x69, 0xe3, 0xda, 0x25, 0x4e, 0xf8, 0xf9,
	0x34, 0x75, 0x7e, 0x71, 0xe9, 0x1b, 0xed, 0x3e, 0xeb, 0xf8, 0x92, 0xce, 0x08, 0x2d, 0x91, 0x5b,
	0x81, 0x92, 0x60, 0x09, 0xf7, 0x68, 0xf3, 0x9f, 0x57, 0xa1, 0x62, 0x63, 0x2c, 0x54, 0x1e, 0x0e,
	0xe8, 0x90, 0x24, 0x81, 0x7c, 0x7b, 0x1e, 0x5a, 0xa0, 0xce, 0x5d, 0x2a, 0x84, 0xcf, 0x22, 0x9d,
	0x8a, 0xab, 0x73, 0xd7, 0x00, 0xd1, 0x47, 0x50, 0x48, 0x04, 0xe5, 0x3a, 0x4f, 0x57, 0x19, 0x68,
	0x94, 0x62, 0x08, 0xd8, 0x68, 0xe4, 0x47, 0xa3, 0x46, 0xe1, 0x6d, 0x0c, 0x16, 0x88, 0x5e, 0x42,
	0x51, 0xbf, 0xdd, 0xc6, 0x75, 0x6d, 0xf1, 0xc1, 0x52, 0x24, 0xcd, 0xcb, 0xfe, 0x9a, 0xb2, 0xfd,
	0xc3, 0x2c, 0x96, 0x5f, 0x4e, 0x53, 0xe7, 0xe1, 0x0f, 0x88, 0xa5, 0x71, 0x61, 0xee, 0x16, 0x1b,
	0xba, 0xe6, 0x7f, 0xf3, 0x50, 0xfb, 0x3a, 0x60, 0x7d, 0x12, 0x58, 0xaf, 0xe8, 0x8f, 0x70, 0x3d,
	0x24, 0xe3, 0x5e, 0x12, 0x07, 0x8c, 0x0c, 0x7a, 0xc2, 0xff, 0x3e, 0x7b, 0xe3, 0xab, 0xc3, 0xfc,
	0xf0, 0x1f, 0xa9, 0x73, 0x65, 0x9a, 0x3a, 0xed, 0x95, 0xa1, 0x26, 0x31, 0xf1, 0x7c, 0x39, 0x69,
	0xed, 0x98, 0x0f, 0x9f, 0x0a, 0x5c, 0x0b, 0xc9, 0xf8, 0xb7, 0x9a, 0xac, 0xeb, 0x7f, 0x4f, 0xd1,
	0x04, 0x94, 0xa0, 0xd7, 0x67, 0x83, 0x89, 0x21, 0xbf, 0xfa, 0xff, 0x24, 0x5f, 0x0b, 0xc9, 0xd8,
	0x65, 0x83, 0x89, 0xa6, 0x76, 0x60, 0xcd, 0x9e, 0x5a, 0x17, 0x2a, 0x53, 0x94, 0xc0, 0x88, 0x0e,
	0x55, 0xb9, 0x7a, 0x1f, 0xaa, 0xa7, 0x8c, 0x9f, 0x88, 0x98, 0x78, 0x54, 0x87, 0xb6, 0x8a, 0xe7,
	0x02, 0x74, 0x07, 0x2a, 0x24, 0x8e, 0x7b, 0xba, 0x60, 0x95, 0xb5, 0xb2, 0x4c, 0xe2, 0xf8, 0x1b,
	0x55, 0xb3, 0x6e, 0x42, 0x51, 0xfa, 0x32, 0xa0, 0xba, 0x6a, 0x55, 0xb1, 0x59, 0xa0, 0xbb, 0x50,
	0x15, 0x49, 0xbf, 0x67, 0x34, 0x6b, 0x5a, 0x53, 0x11, 0x49, 0xff, 0x48, 0x2b, 0x11, 0x14, 0x02,
	0x36, 0x62, 0xba, 0x88, 0x54, 0xb1, 0xfe, 0x56, 0xfc, 0x1e, 0x8b, 0x27, 0xdc, 0x1f, 0x1d, 0x4b,
	0xfd, 0xe4, 0xab, 0x78, 0x2e, 0x50, 0xdb, 0x27, 0x83, 0xd0, 0x8f, 0x7a, 0xba, 0x2f, 0xe8, 0xb7,
	0x59, 0xc5, 0xa0, 0x45, 0xbb, 0x4a, 0xd2, 0xfc, 0x5b, 0x0e, 0xaa, 0x98, 0x48, 0xda, 0xf1, 0x43,
	0x5f, 0xa2, 0x67, 0xe7, 0x6b, 0xab, 0xfb, 0x4b, 0x7b, 0x83, 0x2b, 0x5f, 0xea, 0x29, 0x27, 0x71,
	0x4c, 0x79, 0xeb, 0x69, 0x44, 0x9f, 0xf2, 0x03, 0xc6, 0xe9, 0x1f, 0x84, 0xe4, 0x7e, 0x34, 0xfa,
	0xce, 0x96, 0xe6, 0x16, 0x94, 0x49, 0x10, 0xb0, 0x53, 0xca, 0x4d, 0x95, 0x77, 0x6f, 0x5a, 0xaf,
	0x65, 0x4d, 0x49, 0xf9, 0x59, 0xea, 0xe4, 0xb6, 0x70, 0x06, 0x52, 0xd7, 0x12, 0x28, 0x85, 0xbd,
	0x6a, 0xb3, 0x50, 0xd2, 0x7e, 0xc2, 0x85, 0xd4, 0x37, 0x5c, 0xc4, 0x66, 0xd1, 0xfc, 0x53, 0x01,
	0xae, 0x77, 0xa9, 0x97, 0x70, 0x5f, 0x4e, 0xb2, 0x54, 0xdd, 0x85, 0x8a, 0xe4, 0x89, 0x90, 0x3d,
	0x3f, 0x6e, 0xe4, 0x36, 0xf2, 0x9b, 0x55, 0xf7, 0xfe, 0x34, 0x75, 0x3e, 0x5c, 0x75, 0x04, 0x41,
	0xa5, 0x68, 0xed, 0x1f, 0x7e, 0x43, 0x25, 0x2e, 0x6b, 0xdb, 0xfd, 0x18, 0xed, 0x01, 0xb2, 0xc5,
	0xa1, 0x17, 0xb0, 0x91, 0x1f, 0xe9, 0x9c, 0xd2, 0x27, 0xb8, 0xb6, 0xbd, 0xbe, 0x94, 0x77, 0x1d,
	0x05, 0x39, 0x9a, 0xc4, 0x14, 0xd7, 0xad, 0xd5, 0x4c, 0x82, 0xbe, 0x82, 0xba, 0x3e, 0xdb, 0x79,
	0x3f, 0xf9, 0x8d, 0xfc, 0x5b, 0xfc, 0x5c, 0xd3, 0x36, 0x73, 0x2f, 0x0f, 0xa1, 0x64, 0x9a, 0x76,
	0xa3, 0xb2, 0x91, 0xdf, 0x5c, 0xdb, 0x76, 0x96, 0x8a, 0x81, 0xed, 0xe9, 0xf6, 0x1e, 0xb0, 0x85,
	0xa3, 0x8f, 0x00, 0x0d, 0x7c, 0x41, 0xfa, 0x01, 0xb5, 0x1b, 0x18, 0x32, 0x1e, 0x36, 0xaa, 0x1b,
	0xb9, 0xcd, 0x0a, 0xae, 0x5b, 0x8d, 0xa6, 0x79, 0xcc, 0x78, 0x88, 0x6e, 0x43, 0x49, 0x50, 0x8f,
	0x53, 0xd9, 0x28, 0xea, 0xeb, 0xb7, 0x2b, 0xf4, 0x1d, 0xe4, 0x9f, 0x9f, 0xca, 0x46, 0xe9, 0x12,
	0xef, 0x6e, 0x6b, 0x9a, 0x3a, 0x3f, 0x5d, 0x75, 0xdd, 0xcf, 0x4f, 0x65, 0xeb, 0xc9, 0xef, 0x8e,
	0x76, 0xb4, 0x29, 0x56, 0x7e, 0xd1, 0xe7, 0x00, 0x9c, 0x48, 0xda, 0x33, 0x91, 0x2f, 0xeb, 0x13,
	0x2e, 0xdf, 0xce, 0x2c, 0x4f, 0x71, 0x95, 0x67, 0x9f, 0xcd, 0x7f, 0xe7, 0xa0, 0xfc, 0x84, 0xf5,
	0x77, 0x38, 0x8b, 0xd0, 0x83, 0x85, 0xf4, 0x7d, 0xef, 0x55, 0xea, 0xdc, 0x08, 0x49, 0x2c, 0x24,
	0x4f, 0x3c, 0x99, 0x70, 0xfa, 0x45, 0x53, 0x0f, 0x13, 0x36, 0x31, 0x1f, 0x40, 0x81, 0x8e, 0xe3,
	0x2c, 0x2b, 0x2f, 0x00, 0x2b, 0x6d, 0x13, 0x6b, 0x10, 0xfa, 0x39, 0x94, 0x62, 0xc2, 0x49, 0x28,
	0x4c, 0x5a, 0xba, 0x77, 0x5e, 0xa5, 0xce, 0xad, 0x45, 0xb8, 0xd1, 0x37, 0xb1, 0x05, 0xa2, 0x5d,
	0x28, 0x4b, 0x3f, 0xa4, 0x2c, 0x31, 0x49, 0x5b, 0x75, 0x1f, 0x4c, 0x53, 0xa7, 0xa6, 0x44, 0xad,
	0xaf, 0x12, 0x4e, 0x54, 0x94, 0x5e, 0xa5, 0xce, 0xed, 0x45, 0x27, 0xd6, 0xa2, 0x89, 0x33, 0xdb,
	0xe6, 0xdf, 0xaf, 0x02, 0x3c, 0x61, 0xfd, 0x2c, 0xbd, 0x77, 0xa0, 0x2a, 0xbc, 0x63, 0x3a, 0x48,
	0x02, 0xca, 0x6d, 0x0d, 0xfe, 0xc9, 0xd2, 0x45, 0xcd, 0xf1, 0xad, 0x6e, 0x06, 0xc6, 0x73, 0x3b,
	0xd5, 0xba, 0x3c, 0xae, 0x7b, 0x5d, 0xfe, 0xc2, 0x4e, 0x64, 0xef, 0x13, 0x6b, 0xd4, 0x7a, 0x1d,
	0xae, 0x75, 0x98, 0x47, 0x82, 0x99, 0xab, 0xf5, 0xbf, 0xe4, 0xa0, 0x3a, 0x5b, 0x21, 0x17, 0x8a,
	0x81, 0xd2, 0xdb, 0xed, 0xdc, 0x5f, 0xb5, 0x9d, 0x45, 0x47, 0x6a, 0x66, 0xd1, 0xa6, 0x68, 0x17,
	0x4a, 0x66, 0xfe, 0xb4, 0xa5, 0x7d, 0x39, 0xbd, 0xed, 0x78, 0x9a, 0xf5, 0x39, 0xf8, 0x4f, 0xea,
	0x94, 0xbe, 0xfd, 0xb6, 0xf3, 0x84, 0xf5, 0xd5, 0x48, 0x60, 0xb4, 0x2e, 0x82, 0xfa, 0xcc, 0xb9,
	0x4b, 0xbc, 0x13, 0x1a, 0x0d, 0x9a, 0x7f, 0xcd, 0x43, 0xc9, 0xe4, 0x1a, 0xfa, 0xf8, 0xf5, 0x11,
	0xf5, 0xce, 0x9b, 0x9a, 0xb0, 0x98, 0xcf, 0xa8, 0x9f, 0x42, 0x69, 0xa4, 0x9b, 0xa1, 0xdd, 0xda,
	0xbd, 0x25, 0x9b, 0x85, 0x5e, 0x89, 0x2d, 0x1a, 0x8d, 0xa1, 0x20, 0x42, 0x19, 0xdb, 0xf9, 0xa0,
	0xb9, 0x74, 0x20, 0x33, 0xa9, 0x77, 0x43, 0x39, 0x9b, 0xc3, 0x7e, 0x3d, 0x4d, 0x9d, 0x47, 0x3f,
	0xa0, 0x77, 0x2f, 0x79, 0xc0, 0x9a, 0x11, 0x3d, 0x82, 0x8a, 0xb0, 0x55, 0xd1, 0x0e, 0x1b, 0x1b,
	0xcb, 0xe7, 0x5c, 0x2c, 0x9b, 0x78, 0x66, 0x81, 0x30, 0x14, 0x25, 0x57, 0xcd, 0x4c, 0x57, 0x00,
	0xf7, 0xd1, 0x34, 0x75, 0x3e, 0xbb, 0xcc, 0xa8, 0xa6, 0x8c, 0xfc, 0x68, 0xd4, 0x3a, 0x52, 0xc6,
	0x99, 0x5b, 0xe3, 0x0a, 0x6d, 0x41, 0x5e, 0xc5, 0xb6, 0xf4, 0x86, 0xf9, 0x7c, 0x9e, 0x20, 0x58,
	0xe1, 0x9a, 0xff, 0x2a, 0xc1, 0x2d, 0x9c, 0x44, 0xea, 0x09, 0x64, 0xfb, 0xb4, 0x11, 0x7c, 0x04,
	0xf5, 0x21, 0xe3, 0x1e, 0xed, 0xd1, 0x48, 0x97, 0xb4, 0x70, 0x48, 0x74, 0x28, 0x2b, 0x2e, 0x3a,
	0x4b, 0x9d, 0x6b, 0x5a, 0xb7, 0xab, 0x55, 0x07, 0x43, 0x82, 0x5f, 0x5b, 0xa3, 0x00, 0x6e, 0xc4,
	0x44, 0x88, 0x53, 0xc6, 0x07, 0x3d, 0x8f, 0x85, 0x71, 0x40, 0xc7, 0xea, 0x8e, 0x4c, 0x55, 0xff,
	0x60, 0x69, 0x5b, 0x87, 0x16, 0xbb, 0x33, 0x83, 0xba, 0xb7, 0xcf, 0x52, 0x07, 0xc5, 0x4b, 0x72,
	0x7c, 0x81, 0x0c, 0xed, 0x9e, 0x63, 0x53, 0x2d, 0x38, 0xa0, 0xd1, 0xc8, 0x8e, 0x10, 0x35, 0xf7,
	0xd6, 0x59, 0xea, 0xbc, 0x9b, 0xa9, 0x0f, 0xfc, 0xa8, 0xa3, 0x95, 0x78, 0x59, 0x84, 0xf6, 0xe0,
	0xe6, 0xcc, 0x0d, 0x1d, 0xc7, 0x3e, 0xa7, 0x3d, 0x75, 0x31, 0x3a, 0xb2, 0xb5, 0xc5, 0x0d, 0xed,
	0x6a, 0xf5, 0x91, 0x1f, 0x52, 0x7c, 0x81, 0x0c, 0x0d, 0xe0, 0xde, 0xcc, 0xd3, 0x90, 0xf8, 0x01,
	0x1d, 0xf4, 0x02, 0xe6, 0x9d, 0xf4, 0xe4, 0x31, 0xa7, 0xe2, 0x98, 0x05, 0x03, 0x1d, 0xf2, 0x9a,
	0xeb, 0x9c, 0xa5, 0xce, 0xdd, 0x0c, 0xf9, 0x58, 0x03, 0x3b, 0xcc, 0x3b, 0x39, 0xca, 0x60, 0x78,
	0x95, 0x12, 0x11, 0xf8, 0xd1, 0x85, 0x2c, 0x03, 0x5b, 0xf4, 0x74, 0x16, 0xd4, 0xdc, 0x7b, 0x67,
	0xa9, 0xb3, 0xbe, 0xec, 0x27, 0x2b, 0x8d, 0x78, 0x85, 0x0e, 0xfd, 0x0a, 0xea, 0x33, 0x8a, 0x63,
	0x5f, 0x3d, 0xd4, 0x89, 0x9e, 0xae, 0x6a, 0xee, 0x8d, 0xb3, 0xd4, 0xb9, 0x9e, 0xe9, 0xf6, 0x8c,
	0x0a, 0xbf, 0x2e, 0x40, 0xbf, 0x81, 0x5b, 0xc4, 0xf3, 0x58, 0x12, 0xc9, 0x9e, 0x1f, 0x11, 0x4f,
	0xfa, 0x2f, 0xa9, 0xde, 0x63, 0xa3, 0xa2, 0x9d, 0xbc, 0x77, 0x96, 0x3a, 0x37, 0x2c, 0x60, 0xdf,
	0xea, 0x15, 0x3f, 0xbe, 0x48, 0xa8, 0xce, 0x6b, 0x1a, 0xab, 0xfd, 0xc7, 0x20, 0x73, 0xe9, 0xcb,
	0x89, 0x09, 0x54, 0x75, 0x7e, 0x5e, 0x0d, 0xec, 0x1a, 0xdc, 0xfe, 0x0c, 0xa6, 0x03, 0xb6, 0x42,
	0x87, 0x3a, 0x70, 0x7b, 0x91, 0x42, 0x4d, 0xc3, 0xda, 0x37, 0xcc, 0x37, 0x7c, 0xde, 0xfe, 0x80,
	0x8c, 0xb5, 0xd3, 0x8b, 0x84, 0xcd, 0x2e, 0xd4, 0xec, 0xe3, 0xb2, 0x8f, 0xca, 0x3d, 0x57, 0x2f,
	0x4c, 0x5d, 0xfc, 0x70, 0xb9, 0xf7, 0x5e, 0xf4, 0x1c, 0xe7, 0x55, 0xe3, 0xfe, 0x43, 0xa8, 0xce,
	0x87, 0x15, 0x80, 0x52, 0xc4, 0x78, 0x48, 0x82, 0xfa, 0x15, 0x54, 0x85, 0xa2, 0xae, 0x53, 0xf5,
	0x02, 0x2a, 0x43, 0x5e, 0x84, 0xa2, 0x5e, 0x54, 0x7a, 0x33, 0x9d, 0xd4, 0x4b, 0xf7, 0x1f, 0x03,
	0x5a, 0x7e, 0x67, 0x0a, 0x91, 0x44, 0x82, 0x0c, 0x69, 0xfd, 0x0a, 0x5a, 0x83, 0xf2, 0x88, 0x46,
	0x94, 0x93, 0xa0, 0x9e, 0x43, 0x15, 0x28, 0x68, 0xf1, 0x55, 0x54, 0x83, 0xea, 0x4b, 0xca, 0x27,
	0x3d, 0xbd, 0xcc, 0xbb, 0xed, 0xdf, 0x6f, 0xbd, 0xad, 0x74, 0x9a, 0xa3, 0x7c, 0x69, 0xfe, 0x1c,
	0x16, 0xfb, 0x25, 0xfd, 0xab, 0xc6, 0xc7, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x9f, 0xb1,
	0xac, 0x6c, 0x11, 0x00, 0x00,
}
